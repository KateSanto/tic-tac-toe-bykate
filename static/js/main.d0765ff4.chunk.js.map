{"version":3,"sources":["index.js","findWinner.js"],"names":["Square","props","className","onClick","value","Board","clearBoard","setState","squares","Array","fill","xIsNext","state","i","this","slice","findWinner","handleClick","status","winner","completedSquares","filter","square","length","renderSquare","type","React","Component","Game","ReactDOM","render","document","getElementById","module","exports","console","log","undefined","Error"],"mappings":"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","file":"static/js/main.d0765ff4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport findWinner from './findWinner';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"box\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        //Using .slice to make a copy of squares, instead of modifying original array. Allows me to reuse the original value of squares elsewhere\r\n        const squares = this.state.squares.slice();\r\n        if (findWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({ squares: squares, xIsNext: !this.state.xIsNext, });\r\n    }\r\n\r\n    clearBoard = () => {\r\n        this.setState({\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        })\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const winner = findWinner(this.state.squares);\r\n        let status;\r\n        let completedSquares = this.state.squares.filter(square => square !== null)\r\n        if (winner) {\r\n            status = 'The winner is ' + winner\r\n        } else if (completedSquares.length === 9 && !winner) {\r\n            status = \"It's a tie!\"\r\n        }\r\n        else if (!winner) {\r\n            status = (this.state.xIsNext ? 'X' : 'O') + ', your turn'\r\n        }\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <div className=\"title\"><h1>Tic Tac Toe</h1></div>\r\n\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board\">\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(0)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(1)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(2)}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(3)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(4)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(5)}</div>\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(6)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(7)}</div>\r\n                        <div className=\"col-4 square\">\r\n                            {this.renderSquare(8)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"restart text-center\">\r\n                    <button type=\"button\" className=\"btn btn-light btn-lg\" onClick={this.clearBoard}>Restart</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/*status */}</div>\r\n                    <ol>{/*TODO*/}</ol>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game\r\n\r\n//==================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n","function findWinner(squares) {\r\n    console.log(squares);\r\n    if (squares === undefined) throw new Error(\"Please make a move\");\r\n    if (squares[0] === squares[1] && squares[0] === squares[2]) {\r\n        return squares[0];\r\n    } else if (squares[3] === squares[4] && squares[3] === squares[5]) {\r\n        return squares[3];\r\n    } else if (squares[6] === squares[7] && squares[6] === squares[8]) {\r\n        return squares[6];\r\n    } else if (squares[0] === squares[3] && squares[0] === squares[6]) {\r\n        return squares[0];\r\n    } else if (squares[1] === squares[4] && squares[1] === squares[7]) {\r\n        return squares[1];\r\n    } else if (squares[2] === squares[5] && squares[2] === squares[8]) {\r\n        return squares[2];\r\n    } else if (squares[0] === squares[4] && squares[0] === squares[8]) {\r\n        return squares[0];\r\n    } else if (squares[2] === squares[4] && squares[2] === squares[6]) {\r\n        return squares[2];\r\n    } else {\r\n        return null;\r\n    }\r\n    //WINNING COMBINATIONS\r\n    //     [0, 1, 2],\r\n    // [3, 4, 5],\r\n    // [6, 7, 8],\r\n    // [0, 3, 6],\r\n    // [1, 4, 7],\r\n    // [2, 5, 8],\r\n    // [0, 4, 8],\r\n    // [2, 4, 6],\r\n}\r\nmodule.exports = findWinner;"],"sourceRoot":""}